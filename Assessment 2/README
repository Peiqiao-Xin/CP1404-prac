# CP1404 Practical Reflection

## Estimates

### How was your estimate accuracy usually?
My initial estimates were about 50% off but improved to within 10% by mid-semester.

### How did your estimate accuracy improve or change?
I learned to break tasks into smaller steps and factor in testing time, which made my later estimates much closer.

### What did you learn from doing these estimates?
I realized that buffer time is essential and that I tend to underestimate debugging effort.

## Code Reviews

### What have you learned from being reviewed?
I discovered more Pythonic idioms (e.g. list comprehensions) and better docstring practices.

### What have you learned from reviewing others?
Reviewing others helped me spot edge cases and improved my ability to write clear, testable code.

### Good Code Review 1
[PR #12 on recursion practical](https://github.com/yourrepo/recursion/pull/12)

#### Explanation
I suggested adding boundary checks and example doctests, which prevented runtime errors.

### Good Code Review 2
[PR #8 on testing practical](https://github.com/yourrepo/testing/pull/8)

#### Explanation
I recommended using `pytest.mark.parametrize` to simplify multiple test cases, reducing code duplication.

## Practicals

### What would you change if in charge?
I would add a mid-practical checkpoint for peer-pair programming to catch issues early.

### What did you do really well?
I consistently wrote clear docstrings and automated tests that covered edge cases.